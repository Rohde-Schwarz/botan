
# (C) 2020,2022 Jack Lloyd
# (C) 2022      RenÃ© Meusel, Rohde & Schwarz Cybersecurity
#
# Botan is released under the Simplified BSD License (see license.txt)

name: BSI Builds

permissions:
  contents: read
  # implicitly all other scopes not listed become none

on:
  push:
    branches: [ botan/3.0.0 ]
  pull_request:
    branches: [ botan/3.0.0 ]

# cancel running workflows when new commits are being pushed in pull requests
# but not on the master branch
concurrency:
  group: ${{ github.workflow }} @ ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  utility:
    name: "Utility"
    strategy:
      fail-fast: false

      matrix:
        include:
          - jobname: Documentation
            target: pdf_docs
            artifacts: |
              build/docs/handbook/botan.pdf
              build/docs/doxygen/
            host_os: ubuntu-22.04
          - jobname: Coverage Report
            target: coverage
            artifacts: lcov-out/
            host_os: ubuntu-22.04

    runs-on: ${{ matrix.host_os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Build Agent
        uses: ./.github/actions/setup-build-agent
        with:
          target: ${{ matrix.target }}
          cache-key: bsi-${{ matrix.host_os }}-${{ matrix.target }}

      - name: Build and Test Botan
        run: python3 ./src/scripts/ci_build.py --with-bsi-policy ${{ matrix.target }}

      - name: Archive Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.jobname }}
          path: ${{ matrix.artifacts }}
        if: ${{ matrix.artifacts != '' }}

  tarball:
    name: "Source Tarball"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Shorten the Git SHA
        id: vars
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Generate Tarball
        run: tar -czf botan-${{ steps.vars.outputs.short_sha }}.tar.gz .github doc src configure.py license.txt news.rst readme.rst

      - name: Archive Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "Botan Source Tarball"
          path: botan-*.tar.gz

  bsi_tests:
    name: "BSI Build Policy Tests"
    strategy:
      fail-fast: false

      matrix:
        # basic configuration combinations should run on all target platforms
        target:    [ static, shared ]
        platform:  [
          { host_os: windows-2022, compiler: msvc,  make_tool: jom },
          { host_os: windows-2019, compiler: msvc,  make_tool: jom },
          { host_os: ubuntu-22.04, compiler: gcc,   make_tool: make },
          { host_os: ubuntu-22.04, compiler: clang, make_tool: make },
          { host_os: macos-latest, compiler: clang, make_tool: make }
        ]

    runs-on: ${{ matrix.platform.host_os }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Build Agent
        uses: ./.github/actions/setup-build-agent
        with:
          target: ${{ matrix.target }}
          cache-key: bsi-${{ matrix.platform.host_os }}-${{ matrix.platform.compiler }}-${{ matrix.target }}

      - name: Build and Test Botan
        run: python3 ./src/scripts/ci_build.py --with-bsi-policy --cc='${{ matrix.platform.compiler }}' --make-tool='${{ matrix.platform.make_tool }}' --test-results-dir=junit_reports ${{ matrix.target }}

      - name: Store JUnit Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: junit
          path: junit_reports/*.xml
          if-no-files-found: error

  test_report:
    name: "Generate Test Report"
    needs: bsi_tests
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Shorten the Git SHA
        id: vars
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Setup Build Agent
        uses: ./.github/actions/setup-build-agent
        with:
          target: test-report

      - name: Fetch JUnit Reports
        uses: actions/download-artifact@v3
        with:
          name: junit
          path: junit_reports

      - name: Generate Test Report
        run: |
             python3 ./src/scripts/bsi_test_report.py --preamble doc/report_assets/testreport_preamble.rst --git-refname ${{ github.ref_name }} --git-refsha ${{ github.sha }} --format=rst junit_reports test-report-${{ steps.vars.outputs.short_sha }}.rst
             python3 ./src/scripts/bsi_test_report.py --preamble doc/report_assets/testreport_preamble.rst --git-refname ${{ github.ref_name }} --git-refsha ${{ github.sha }} --format=pdf junit_reports test-report-${{ steps.vars.outputs.short_sha }}.pdf

      - name: Store Test Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test Report
          path: test-report-*.*
          if-no-files-found: error
