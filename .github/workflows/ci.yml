
# (C) 2022 Jack Lloyd
# (C) 2022 Ren√© Meusel, Rohde & Schwarz Cybersecurity
# Botan is released under the Simplified BSD License (see license.txt)
#
# This is a backport to have some rudimentary CI before officially switching to
# Botan's upstream GitHub Actions.

name: ci

permissions:
  contents: read
  # implicitly all other scopes not listed become none

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# cancel running workflows when new commits are being pushed in pull requests
# but not on the master branch
concurrency:
  group: ${{ github.workflow }} @ ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  ci:
    name: Build and Test

    strategy:
      fail-fast: false
      matrix:
        target: [ static, shared, bsi, nist ]
        os: [ linux, macos, windows ]
        architecture: [ x86, x86_amd64 ]
        compiler: [ clang, gcc, msvc ]

        include:
          - os: linux
            host_os: ubuntu-latest
            make_tool: make
            ccache: ccache
          - os: macos
            host_os: macos-latest
            make_tool: make
            ccache: ccache
          - os: windows
            host_os: windows-latest
            make_tool: jom
            ccache: sccache

        exclude:
          - os: linux
            architecture: x86
          - os: macos
            architecture: x86
          - os: linux
            compiler: msvc
          - os: macos
            compiler: msvc
          - os: windows
            compiler: clang
          - os: windows
            compiler: gcc

    runs-on: ${{ matrix.host_os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
            path: |
              ~/.ccache
              /Users/runner/Library/Caches/ccache
            key: ${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.target }}-${{ github.run_id }}
            restore-keys: |
               ${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.target }}

      - name: Setup Build Host (Unix)
        run: ./src/scripts/ci/setup_gh_actions.sh ${{ matrix.target }}
        if: os != 'windows'
      - name: Setup Build Host (Windows)
        run: ./src/scripts/ci/setup_gh_actions.ps1 ${{ matrix.target }}
        if: os == 'windows'

      - run: ./src/scripts/ci_build.py --os= --cc='${{ matrix.compiler }}' --cpu='${{ matrix.architecture }}' --make-tool='${{ matrix.make_tool }}' --compiler-cache='${{ matrix.ccache }}' ${{ matrix.target }}
